{
  "address": "0xc1EeD9232A0A44c2463ACB83698c162966FBc78d",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getETHPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getUSDPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "name": "setETHAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "name": "setUSDAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd8184a240df5225337fd50e8c1d102497fa5dc45fa8fc73362502c08e942d0c5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xc1EeD9232A0A44c2463ACB83698c162966FBc78d",
    "transactionIndex": 0,
    "gasUsed": "1203615",
    "logsBloom": "0x
    "blockHash": "0x366b9b3e744bba87fbd86bd673a99f24b51031f2d63d1538eccac273b2db142e",
    "transactionHash": "0xd8184a240df5225337fd50e8c1d102497fa5dc45fa8fc73362502c08e942d0c5",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 17539590,
        "transactionHash": "0xd8184a240df5225337fd50e8c1d102497fa5dc45fa8fc73362502c08e942d0c5",
        "address": "0xc1EeD9232A0A44c2463ACB83698c162966FBc78d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x366b9b3e744bba87fbd86bd673a99f24b51031f2d63d1538eccac273b2db142e"
      }
    ],
    "blockNumber": 17539590,
    "cumulativeGasUsed": "1203615",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "2a79c4162b5952a6aa195452c697c39b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUSDPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"setETHAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"setUSDAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"aggregator contract that provides USD price of tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/ChainlinkPriceFactory.sol\":\"ChainlinkPriceFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/drops/IChainlinkPriceFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IChainlinkPriceFactory {\\n    function getUSDPrice(address asset) external view returns (int256);\\n\\n    function getETHPrice(address asset) external view returns (int256);\\n}\\n\",\"keccak256\":\"0x5fee90072a5ed99bc0392731a52f4def4daeaef61bb63199288a18414e64253e\",\"license\":\"MIT\"},\"contracts/oracle/ChainlinkPriceFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '../interfaces/drops/IChainlinkPriceFactory.sol';\\n\\n/**\\n * @title aggregator contract that provides USD price of tokens\\n */\\ncontract ChainlinkPriceFactory is Ownable, IChainlinkPriceFactory {\\n    /// @notice ETH/USD chainlink aggregator\\n    AggregatorV3Interface constant ETH_USD =\\n        AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\\n\\n    /// @notice token asset => address of USD chainlink aggregators\\n    mapping(address => AggregatorV3Interface) usdAggregators;\\n\\n    /// @notice token asset => address of ETH chainlink aggregators\\n    mapping(address => AggregatorV3Interface) ethAggregators;\\n\\n    function decimals() external pure returns (uint8) {\\n        return 18;\\n    }\\n\\n    function setUSDAggregator(address asset, AggregatorV3Interface aggregator) external onlyOwner {\\n        require(asset != address(0), '!asset');\\n        usdAggregators[asset] = aggregator;\\n    }\\n\\n    function setETHAggregator(address asset, AggregatorV3Interface aggregator) external onlyOwner {\\n        require(asset != address(0), '!asset');\\n        ethAggregators[asset] = aggregator;\\n    }\\n\\n    function _formatDecimals(int256 price, uint8 priceDecimals) internal pure returns (int256) {\\n        if (priceDecimals == 18) {\\n            return price;\\n        } else if (priceDecimals > 18) {\\n            return price / int256(10 ** (priceDecimals - 18));\\n        }\\n        return price * int256(10 ** (18 - priceDecimals));\\n    }\\n\\n    function _getETHUSDPrice() internal view returns (int256) {\\n        (, int256 ethPrice, , , ) = ETH_USD.latestRoundData(); // decimal is 8\\n        return _formatDecimals(ethPrice, 8);\\n    }\\n\\n    function getUSDPrice(address asset) public view override returns (int256 price) {\\n        require(asset != address(0), '!asset');\\n        AggregatorV3Interface aggregator;\\n\\n        if (address(usdAggregators[asset]) != address(0)) {\\n            aggregator = usdAggregators[asset];\\n            (, int256 answer, , , ) = aggregator.latestRoundData();\\n            price = _formatDecimals(answer, aggregator.decimals());\\n        } else if (address(ethAggregators[asset]) != address(0)) {\\n            aggregator = ethAggregators[asset];\\n            (, int256 ethPrice, , , ) = aggregator.latestRoundData();\\n            ethPrice = _formatDecimals(ethPrice, aggregator.decimals());\\n            price = (ethPrice * _getETHUSDPrice()) / (10 ** 18);\\n        }\\n    }\\n\\n    function getETHPrice(address asset) external view override returns (int256 price) {\\n        require(asset != address(0), '!asset');\\n        int256 usdPrice = getUSDPrice(asset);\\n\\n        if (usdPrice > 0) {\\n            price = (usdPrice * (10 ** 18)) / _getETHUSDPrice();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x110d2a3d16818d1a9922e933a854615d74d209913fca0ed9f7938febcb6c3805\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114648061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b1461010157806397cecb251461011f578063ac4e653d1461014f578063f2fde38b1461016b57610088565b80630e015f401461008d578063313ce567146100a9578063715018a6146100c75780638b2f0f4f146100d1575b600080fd5b6100a760048036038101906100a29190610cc3565b610187565b005b6100b1610281565b6040516100be9190610ecb565b60405180910390f35b6100cf61028a565b005b6100eb60048036038101906100e69190610c9a565b61029e565b6040516100f89190610e50565b60405180910390f35b61010961074f565b6040516101169190610e35565b60405180910390f35b61013960048036038101906101349190610c9a565b610778565b6040516101469190610e50565b60405180910390f35b61016960048036038101906101649190610cc3565b61082e565b005b61018560048036038101906101809190610c9a565b610928565b005b61018f6109ac565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f690610eab565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006012905090565b6102926109ac565b61029c6000610a2a565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610eab565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff16600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461051a57600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561044d57600080fd5b505afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104859190610cff565b505050915050610512818373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d9190610d76565b610aee565b925050610749565b600073ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461074857600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190610cff565b50505091505061071c818373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190610d76565b610aee565b9050670de0b6b3a764000061072f610b68565b8261073a91906110d2565b6107449190610ef7565b9250505b5b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090610eab565b60405180910390fd5b60006107f48361029e565b9050600081131561082857610807610b68565b670de0b6b3a76400008261081b91906110d2565b6108259190610ef7565b91505b50919050565b6108366109ac565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d90610eab565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6109306109ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099790610e6b565b60405180910390fd5b6109a981610a2a565b50565b6109b4610c14565b73ffffffffffffffffffffffffffffffffffffffff166109d261074f565b73ffffffffffffffffffffffffffffffffffffffff1614610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f90610e8b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060128260ff161415610b0457829050610b62565b60128260ff161115610b3b57601282610b1d91906111e9565b600a610b299190610fb4565b83610b349190610ef7565b9050610b62565b816012610b4891906111e9565b600a610b549190610fb4565b83610b5f91906110d2565b90505b92915050565b600080735f4ec3df9cbd43714fe2740f5e3616155c5b841973ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610bc557600080fd5b505afa158015610bd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfd9190610cff565b505050915050610c0e816008610aee565b91505090565b600033905090565b600081359050610c2b816113a4565b92915050565b600081359050610c40816113bb565b92915050565b600081519050610c55816113d2565b92915050565b600081519050610c6a816113e9565b92915050565b600081519050610c7f81611417565b92915050565b600081519050610c9481611400565b92915050565b600060208284031215610cac57600080fd5b6000610cba84828501610c1c565b91505092915050565b60008060408385031215610cd657600080fd5b6000610ce485828601610c1c565b9250506020610cf585828601610c31565b9150509250929050565b600080600080600060a08688031215610d1757600080fd5b6000610d2588828901610c70565b9550506020610d3688828901610c46565b9450506040610d4788828901610c5b565b9350506060610d5888828901610c5b565b9250506080610d6988828901610c70565b9150509295509295909350565b600060208284031215610d8857600080fd5b6000610d9684828501610c85565b91505092915050565b610da88161121d565b82525050565b610db781611241565b82525050565b6000610dca602683610ee6565b9150610dd582611303565b604082019050919050565b6000610ded602083610ee6565b9150610df882611352565b602082019050919050565b6000610e10600683610ee6565b9150610e1b8261137b565b602082019050919050565b610e2f81611275565b82525050565b6000602082019050610e4a6000830184610d9f565b92915050565b6000602082019050610e656000830184610dae565b92915050565b60006020820190508181036000830152610e8481610dbd565b9050919050565b60006020820190508181036000830152610ea481610de0565b9050919050565b60006020820190508181036000830152610ec481610e03565b9050919050565b6000602082019050610ee06000830184610e26565b92915050565b600082825260208201905092915050565b6000610f0282611241565b9150610f0d83611241565b925082610f1d57610f1c6112c7565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610f5657610f55611298565b5b828205905092915050565b6000808291508390505b6001851115610fab57808604811115610f8757610f86611298565b5b6001851615610f965780820291505b8081029050610fa4856112f6565b9450610f6b565b94509492505050565b6000610fbf8261126b565b9150610fca83611275565b9250610ff77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610fff565b905092915050565b60008261100f57600190506110cb565b8161101d57600090506110cb565b8160018114611033576002811461103d5761106c565b60019150506110cb565b60ff84111561104f5761104e611298565b5b8360020a91508482111561106657611065611298565b5b506110cb565b5060208310610133831016604e8410600b84101617156110a15782820a90508381111561109c5761109b611298565b5b6110cb565b6110ae8484846001610f61565b925090508184048111156110c5576110c4611298565b5b81810290505b9392505050565b60006110dd82611241565b91506110e883611241565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112757611126611298565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116457611163611298565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a1576111a0611298565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111de576111dd611298565b5b828202905092915050565b60006111f482611275565b91506111ff83611275565b92508282101561121257611211611298565b5b828203905092915050565b60006112288261124b565b9050919050565b600061123a8261121d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f2161737365740000000000000000000000000000000000000000000000000000600082015250565b6113ad8161121d565b81146113b857600080fd5b50565b6113c48161122f565b81146113cf57600080fd5b50565b6113db81611241565b81146113e657600080fd5b50565b6113f28161126b565b81146113fd57600080fd5b50565b61140981611275565b811461141457600080fd5b50565b61142081611282565b811461142b57600080fd5b5056fea2646970667358221220877aecf9725c383528b9f0a2b5cca4bef52165384f70626823fdabca2bc3e5d264736f6c63430008040033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "aggregator contract that provides USD price of tokens",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1475,
        "contract": "contracts/oracle/ChainlinkPriceFactory.sol:ChainlinkPriceFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7027,
        "contract": "contracts/oracle/ChainlinkPriceFactory.sol:ChainlinkPriceFactory",
        "label": "usdAggregators",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)93)"
      },
      {
        "astId": 7033,
        "contract": "contracts/oracle/ChainlinkPriceFactory.sol:ChainlinkPriceFactory",
        "label": "ethAggregators",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)93)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)93": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(AggregatorV3Interface)93)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract AggregatorV3Interface)",
        "numberOfBytes": "32",
        "value": "t_contract(AggregatorV3Interface)93"
      }
    }
  }
}