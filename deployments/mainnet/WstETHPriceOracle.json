{
  "address": "0xab1a6C9e410463369f4Bf83Db7E028750bbB2Ea7",
  "abi": [
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "descriton",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wstETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc3dcc9bbf073772d197a6bc08cb838d58c1597c7621db846bd3d0bdf3508b6ab",
  "receipt": {
    "to": null,
    "from": "0x0450bf433FaD8820e180942B19f2B09Fe6c0854e",
    "contractAddress": "0xab1a6C9e410463369f4Bf83Db7E028750bbB2Ea7",
    "transactionIndex": 145,
    "gasUsed": "450299",
    "logsBloom": "0x
    "blockHash": "0x7439ee7a5fc7c7e78a3ae8066ed6b527ef55ceeef5abe3af97eb8e4e089ded34",
    "transactionHash": "0xc3dcc9bbf073772d197a6bc08cb838d58c1597c7621db846bd3d0bdf3508b6ab",
    "logs": [],
    "blockNumber": 17688789,
    "cumulativeGasUsed": "10694788",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "1f654e3d32294e34fb5200289b2ba7e2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"descriton\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wstETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"aggregator contract that provides eth price of Lido wstETH\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"address to the price factory\"},\"stETH()\":{\"notice\":\"address to stETH\"},\"wstETH()\":{\"notice\":\"address to wstETH\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/priceAggregators/WstETHPriceOracle.sol\":\"WstETHPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/drops/IChainlinkPriceFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IChainlinkPriceFactory {\\n    function getUSDPrice(address asset) external view returns (int256);\\n\\n    function getETHPrice(address asset) external view returns (int256);\\n}\\n\",\"keccak256\":\"0x5fee90072a5ed99bc0392731a52f4def4daeaef61bb63199288a18414e64253e\",\"license\":\"MIT\"},\"contracts/oracle/priceAggregators/WstETHPriceOracle.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '../../interfaces/drops/IChainlinkPriceFactory.sol';\\n\\ninterface IWrappedstETH {\\n    function stETH() external view returns (address);\\n\\n    function getStETHByWstETH(uint256 _wstETHAmount) external view returns (uint256);\\n}\\n\\n/**\\n * @title aggregator contract that provides eth price of Lido wstETH\\n */\\ncontract WstETHPriceOracle {\\n    /// @notice address to stETH\\n    address public constant stETH = 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84;\\n\\n    /// @notice address to wstETH\\n    address public constant wstETH = 0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0;\\n\\n    /// @notice address to the price factory\\n    address public constant factory = 0x4148D2220511d3521E232ff0F6369a14A9737c9A;\\n\\n    function decimals() external pure returns (uint8) {\\n        return 18;\\n    }\\n\\n    function descriton() external pure returns (string memory) {\\n        return 'Lido wstETH oracle';\\n    }\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 /*roundId*/,\\n            int256 answer,\\n            uint256 /*startedAt*/,\\n            uint256 /*updatedAt*/,\\n            uint80 /*answeredInRound*/\\n        )\\n    {\\n        uint256 stETHPrice = uint256(IChainlinkPriceFactory(factory).getETHPrice(stETH));\\n        answer = int256((stETHPrice * IWrappedstETH(wstETH).getStETHByWstETH(1e18)) / 1e18);\\n    }\\n}\\n\",\"keccak256\":\"0x21b0c22b0b5e6bc1b712473b8f538e4afcb5bda358f79e05a85960994402a43d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610733806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806317dc2a7114610067578063313ce567146100855780634aa07e64146100a3578063c1fe3e48146100c1578063c45a0155146100df578063feaf968c146100fd575b600080fd5b61006f61011f565b60405161007c919061047b565b60405180910390f35b61008d61015c565b60405161009a91906104f0565b60405180910390f35b6100ab610165565b6040516100b89190610445565b60405180910390f35b6100c961017d565b6040516100d69190610445565b60405180910390f35b6100e7610195565b6040516100f49190610445565b60405180910390f35b6101056101ad565b60405161011695949392919061049d565b60405180910390f35b60606040518060400160405280601281526020017f4c69646f20777374455448206f7261636c650000000000000000000000000000815250905090565b60006012905090565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca081565b73ae7ab96520de3a18e5e111b5eaab095312d7fe8481565b734148d2220511d3521e232ff0f6369a14a9737c9a81565b600080600080600080734148d2220511d3521e232ff0f6369a14a9737c9a73ffffffffffffffffffffffffffffffffffffffff166397cecb2573ae7ab96520de3a18e5e111b5eaab095312d7fe846040518263ffffffff1660e01b81526004016102179190610445565b60206040518083038186803b15801561022f57600080fd5b505afa158015610243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102679190610360565b9050670de0b6b3a7640000737f39c581f595b53c5cb19bd0b3f8da6c935e2ca073ffffffffffffffffffffffffffffffffffffffff1663bb2952fc670de0b6b3a76400006040518263ffffffff1660e01b81526004016102c79190610460565b60206040518083038186803b1580156102df57600080fd5b505afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190610389565b826103229190610558565b61032c9190610527565b9450509091929394565b600081519050610345816106cf565b92915050565b60008151905061035a816106e6565b92915050565b60006020828403121561037257600080fd5b600061038084828501610336565b91505092915050565b60006020828403121561039b57600080fd5b60006103a98482850161034b565b91505092915050565b6103bb816105b2565b82525050565b6103ca816105c4565b82525050565b6103d98161061b565b82525050565b60006103ea8261050b565b6103f48185610516565b935061040481856020860161062d565b61040d816106be565b840191505092915050565b610421816105ee565b82525050565b61043081610605565b82525050565b61043f816105f8565b82525050565b600060208201905061045a60008301846103b2565b92915050565b600060208201905061047560008301846103d0565b92915050565b6000602082019050818103600083015261049581846103df565b905092915050565b600060a0820190506104b26000830188610427565b6104bf60208301876103c1565b6104cc6040830186610418565b6104d96060830185610418565b6104e66080830184610427565b9695505050505050565b60006020820190506105056000830184610436565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610532826105ee565b915061053d836105ee565b92508261054d5761054c61068f565b5b828204905092915050565b6000610563826105ee565b915061056e836105ee565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156105a7576105a6610660565b5b828202905092915050565b60006105bd826105ce565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b6000610626826105ee565b9050919050565b60005b8381101561064b578082015181840152602081019050610630565b8381111561065a576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6106d8816105c4565b81146106e357600080fd5b50565b6106ef816105ee565b81146106fa57600080fd5b5056fea2646970667358221220e20e4712a312e1ef0b38c93e290077e07cb2ff4dcafab50ea31c32885fe89cc664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806317dc2a7114610067578063313ce567146100855780634aa07e64146100a3578063c1fe3e48146100c1578063c45a0155146100df578063feaf968c146100fd575b600080fd5b61006f61011f565b60405161007c919061047b565b60405180910390f35b61008d61015c565b60405161009a91906104f0565b60405180910390f35b6100ab610165565b6040516100b89190610445565b60405180910390f35b6100c961017d565b6040516100d69190610445565b60405180910390f35b6100e7610195565b6040516100f49190610445565b60405180910390f35b6101056101ad565b60405161011695949392919061049d565b60405180910390f35b60606040518060400160405280601281526020017f4c69646f20777374455448206f7261636c650000000000000000000000000000815250905090565b60006012905090565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca081565b73ae7ab96520de3a18e5e111b5eaab095312d7fe8481565b734148d2220511d3521e232ff0f6369a14a9737c9a81565b600080600080600080734148d2220511d3521e232ff0f6369a14a9737c9a73ffffffffffffffffffffffffffffffffffffffff166397cecb2573ae7ab96520de3a18e5e111b5eaab095312d7fe846040518263ffffffff1660e01b81526004016102179190610445565b60206040518083038186803b15801561022f57600080fd5b505afa158015610243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102679190610360565b9050670de0b6b3a7640000737f39c581f595b53c5cb19bd0b3f8da6c935e2ca073ffffffffffffffffffffffffffffffffffffffff1663bb2952fc670de0b6b3a76400006040518263ffffffff1660e01b81526004016102c79190610460565b60206040518083038186803b1580156102df57600080fd5b505afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190610389565b826103229190610558565b61032c9190610527565b9450509091929394565b600081519050610345816106cf565b92915050565b60008151905061035a816106e6565b92915050565b60006020828403121561037257600080fd5b600061038084828501610336565b91505092915050565b60006020828403121561039b57600080fd5b60006103a98482850161034b565b91505092915050565b6103bb816105b2565b82525050565b6103ca816105c4565b82525050565b6103d98161061b565b82525050565b60006103ea8261050b565b6103f48185610516565b935061040481856020860161062d565b61040d816106be565b840191505092915050565b610421816105ee565b82525050565b61043081610605565b82525050565b61043f816105f8565b82525050565b600060208201905061045a60008301846103b2565b92915050565b600060208201905061047560008301846103d0565b92915050565b6000602082019050818103600083015261049581846103df565b905092915050565b600060a0820190506104b26000830188610427565b6104bf60208301876103c1565b6104cc6040830186610418565b6104d96060830185610418565b6104e66080830184610427565b9695505050505050565b60006020820190506105056000830184610436565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610532826105ee565b915061053d836105ee565b92508261054d5761054c61068f565b5b828204905092915050565b6000610563826105ee565b915061056e836105ee565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156105a7576105a6610660565b5b828202905092915050565b60006105bd826105ce565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b6000610626826105ee565b9050919050565b60005b8381101561064b578082015181840152602081019050610630565b8381111561065a576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6106d8816105c4565b81146106e357600080fd5b50565b6106ef816105ee565b81146106fa57600080fd5b5056fea2646970667358221220e20e4712a312e1ef0b38c93e290077e07cb2ff4dcafab50ea31c32885fe89cc664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "aggregator contract that provides eth price of Lido wstETH",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "factory()": {
        "notice": "address to the price factory"
      },
      "stETH()": {
        "notice": "address to stETH"
      },
      "wstETH()": {
        "notice": "address to wstETH"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}